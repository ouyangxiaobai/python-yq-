{"remainingRequest":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js!D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChartEnhanced\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChartEnhanced\\src\\main.vue","mtime":499162500000},{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovXHU1MTcxXHU0RUFCXHU2NTg3XHU0RUY2L2NvZGUgc3BhY2UvcHl0aG9uXHU3NUFCXHU2MEM1XHU3RURGXHU4QkExXHU1MjA2XHU2NzkwXHU4RjZGXHU0RUY2XHU2RTkwXHU3ODAxXHU2NUIwXHU5NUZCXHU3MjJDXHU4NjZCK1x1OEJCQVx1NjU4N1x1N0IyQ1x1NEUwOVx1N0EzRlx1RkYwOFx1NURGMlx1OTY0RFx1OTFDRFx1RkYwOS9lcGlkZW1pY21hbmFnZW1lbnR3ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkQ6L1x1NTE3MVx1NEVBQlx1NjU4N1x1NEVGNi9jb2RlIHNwYWNlL3B5dGhvblx1NzVBQlx1NjBDNVx1N0VERlx1OEJBMVx1NTIwNlx1Njc5MFx1OEY2Rlx1NEVGNlx1NkU5MFx1NzgwMVx1NjVCMFx1OTVGQlx1NzIyQ1x1ODY2QitcdThCQkFcdTY1ODdcdTdCMkNcdTRFMDlcdTdBM0ZcdUZGMDhcdTVERjJcdTk2NERcdTkxQ0RcdUZGMDkvZXBpZGVtaWNtYW5hZ2VtZW50d2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICJEOi9cdTUxNzFcdTRFQUJcdTY1ODdcdTRFRjYvY29kZSBzcGFjZS9weXRob25cdTc1QUJcdTYwQzVcdTdFREZcdThCQTFcdTUyMDZcdTY3OTBcdThGNkZcdTRFRjZcdTZFOTBcdTc4MDFcdTY1QjBcdTk1RkJcdTcyMkNcdTg2NkIrXHU4QkJBXHU2NTg3XHU3QjJDXHU0RTA5XHU3QTNGXHVGRjA4XHU1REYyXHU5NjREXHU5MUNEXHVGRjA5L2VwaWRlbWljbWFuYWdlbWVudHdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9cdTUxNzFcdTRFQUJcdTY1ODdcdTRFRjYvY29kZSBzcGFjZS9weXRob25cdTc1QUJcdTYwQzVcdTdFREZcdThCQTFcdTUyMDZcdTY3OTBcdThGNkZcdTRFRjZcdTZFOTBcdTc4MDFcdTY1QjBcdTk1RkJcdTcyMkNcdTg2NkIrXHU4QkJBXHU2NTg3XHU3QjJDXHU0RTA5XHU3QTNGXHVGRjA4XHU1REYyXHU5NjREXHU5MUNEXHVGRjA5L2VwaWRlbWljbWFuYWdlbWVudHdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwppbXBvcnQgeyByYW5kb21FeHRlbmQsIGdldFBvaW50RGlzdGFuY2UsIHV1aWQgfSBmcm9tICcuLi8uLi8uLi91dGlsL2luZGV4JzsKaW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZGbHlsaW5lQ2hhcnRFbmhhbmNlZCcsCiAgbWl4aW5zOiBbYXV0b1Jlc2l6ZV0sCiAgcHJvcHM6IHsKICAgIGNvbmZpZzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIGRldjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBpZCA9IHV1aWQoKTsKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ2R2LWZseWxpbmUtY2hhcnQtZW5oYW5jZWQnLAogICAgICB1bmlxdWU6IE1hdGgucmFuZG9tKCksCiAgICAgIGZseWxpbmVHcmFkaWVudElkOiAiZmx5bGluZS1ncmFkaWVudC1pZC0iLmNvbmNhdChpZCksCiAgICAgIGhhbG9HcmFkaWVudElkOiAiaGFsby1ncmFkaWVudC1pZC0iLmNvbmNhdChpZCksCgogICAgICAvKioKICAgICAgICogQGRlc2NyaXB0aW9uIFR5cGUgRGVjbGFyYXRpb24KICAgICAgICogCiAgICAgICAqIGludGVyZmFjZSBIYWxvIHsKICAgICAgICogICAgc2hvdz86IGJvb2xlYW4KICAgICAgICogICAgZHVyYXRpb24/OiBbbnVtYmVyLCBudW1iZXJdCiAgICAgICAqICAgIGNvbG9yPzogc3RyaW5nCiAgICAgICAqICAgIHJhZGl1cz86IG51bWJlcgogICAgICAgKiB9CiAgICAgICAqIAogICAgICAgKiBpbnRlcmZhY2UgVGV4dCB7CiAgICAgICAqICAgIHNob3c/OiBib29sZWFuCiAgICAgICAqICAgIG9mZnNldD86IFtudW1iZXIsIG51bWJlcl0KICAgICAgICogICAgY29sb3I/OiBzdHJpbmcKICAgICAgICogICAgZm9udFNpemU/OiBudW1iZXIKICAgICAgICogfQogICAgICAgKiAKICAgICAgICogaW50ZXJmYWNlIEljb24gewogICAgICAgKiAgICBzaG93PzogYm9vbGVhbgogICAgICAgKiAgICBzcmM/OiBzdHJpbmcKICAgICAgICogICAgd2lkdGg/OiBudW1iZXIKICAgICAgICogICAgaGVpZ2h0PzogbnVtYmVyCiAgICAgICAqIH0KICAgICAgICogCiAgICAgICAqIGludGVyZmFjZSBQb2ludCB7CiAgICAgICAqICAgIG5hbWU6IHN0cmluZwogICAgICAgKiAgICBjb29yZGluYXRlOiBbbnVtYmVyLCBudW1iZXJdCiAgICAgICAqICAgIGhhbG8/OiBIYWxvCiAgICAgICAqICAgIHRleHQ/OiBUZXh0CiAgICAgICAqICAgIGljb24/OiBJY29uCiAgICAgICAqIH0KICAgICAgICogCiAgICAgICAqIGludGVyZmFjZSBMaW5lIHsKICAgICAgICogICAgd2lkdGg/OiBudW1iZXIKICAgICAgICogICAgY29sb3I/OiBzdHJpbmcKICAgICAgICogICAgb3JiaXRDb2xvcj86IHN0cmluZwogICAgICAgKiAgICBkdXJhdGlvbj86IFtudW1iZXIsIG51bWJlcl0KICAgICAgICogICAgcmFkaXVzPzogc3RyaW5nCiAgICAgICAqIH0KICAgICAgICogCiAgICAgICAqIGludGVyZmFjZSBGbHlsaW5lIGV4dGVuZHMgTGluZSB7CiAgICAgICAqICAgIHNvdXJjZTogc3RyaW5nCiAgICAgICAqICAgIHRhcmdldDogc3RyaW5nCiAgICAgICAqIH0KICAgICAgICogCiAgICAgICAqIGludGVyZmFjZSBGbHlsaW5lV2l0aFBhdGggZXh0ZW5kcyBGbHlsaW5lIHsKICAgICAgICogICAgZDogc3RyaW5nCiAgICAgICAqICAgIHBhdGg6IFtbbnVtYmVyLCBudW1iZXJdLCBbbnVtYmVyLCBudW1iZXJdLCBbbnVtYmVyLCBudW1iZXJdXQogICAgICAgKiAgICBrZXk6IHN0cmluZwogICAgICAgKiB9CiAgICAgICAqLwogICAgICBkZWZhdWx0Q29uZmlnOiB7CiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEZseWxpbmUgY2hhcnQgcG9pbnRzCiAgICAgICAgICogQHR5cGUge1BvaW50W119CiAgICAgICAgICogQGRlZmF1bHQgcG9pbnRzID0gW10KICAgICAgICAgKi8KICAgICAgICBwb2ludHM6IFtdLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gTGluZXMKICAgICAgICAgKiBAdHlwZSB7Rmx5bGluZVtdfQogICAgICAgICAqIEBkZWZhdWx0IGxpbmVzID0gW10KICAgICAgICAgKi8KICAgICAgICBsaW5lczogW10sCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBHbG9iYWwgaGFsbyBjb25maWd1cmF0aW9uCiAgICAgICAgICogQHR5cGUge0hhbG99CiAgICAgICAgICovCiAgICAgICAgaGFsbzogewogICAgICAgICAgLyoqCiAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gV2hldGhlciB0byBzaG93IGhhbG8KICAgICAgICAgICAqIEB0eXBlIHtCb29sZWFufQogICAgICAgICAgICogQGRlZmF1bHQgc2hvdyA9IGZhbHNlCiAgICAgICAgICAgKi8KICAgICAgICAgIHNob3c6IGZhbHNlLAoKICAgICAgICAgIC8qKgogICAgICAgICAgICogQGRlc2NyaXB0aW9uIEhhbG8gYW5pbWF0aW9uIGR1cmF0aW9uICgxcyA9IDEwKQogICAgICAgICAgICogQHR5cGUge1tudW1iZXIsIG51bWJlcl19CiAgICAgICAgICAgKi8KICAgICAgICAgIGR1cmF0aW9uOiBbMjAsIDMwXSwKCiAgICAgICAgICAvKioKICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBIYWxvIGNvbG9yCiAgICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAgICogQGRlZmF1bHQgY29sb3IgPSAnI2ZiNzI5MycKICAgICAgICAgICAqLwogICAgICAgICAgY29sb3I6ICcjZmI3MjkzJywKCiAgICAgICAgICAvKioKICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBIYWxvIHJhZGl1cwogICAgICAgICAgICogQHR5cGUge051bWJlcn0KICAgICAgICAgICAqIEBkZWZhdWx0IHJhZGl1cyA9IDEyMAogICAgICAgICAgICovCiAgICAgICAgICByYWRpdXM6IDEyMAogICAgICAgIH0sCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBHbG9iYWwgdGV4dCBjb25maWd1cmF0aW9uCiAgICAgICAgICogQHR5cGUge1RleHR9CiAgICAgICAgICovCiAgICAgICAgdGV4dDogewogICAgICAgICAgLyoqCiAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gV2hldGhlciB0byBzaG93IHRleHQKICAgICAgICAgICAqIEB0eXBlIHtCb29sZWFufQogICAgICAgICAgICogQGRlZmF1bHQgc2hvdyA9IGZhbHNlCiAgICAgICAgICAgKi8KICAgICAgICAgIHNob3c6IGZhbHNlLAoKICAgICAgICAgIC8qKgogICAgICAgICAgICogQGRlc2NyaXB0aW9uIFRleHQgb2Zmc2V0CiAgICAgICAgICAgKiBAdHlwZSB7W251bWJlciwgbnVtYmVyXX0KICAgICAgICAgICAqIEBkZWZhdWx0IG9mZnNldCA9IFswLCAxNV0KICAgICAgICAgICAqLwogICAgICAgICAgb2Zmc2V0OiBbMCwgMTVdLAoKICAgICAgICAgIC8qKgogICAgICAgICAgICogQGRlc2NyaXB0aW9uIFRleHQgY29sb3IKICAgICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICAgKiBAZGVmYXVsdCBjb2xvciA9ICcjZmZkYjVjJwogICAgICAgICAgICovCiAgICAgICAgICBjb2xvcjogJyNmZmRiNWMnLAoKICAgICAgICAgIC8qKgogICAgICAgICAgICogQGRlc2NyaXB0aW9uIFRleHQgZm9udCBzaXplCiAgICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAgICogQGRlZmF1bHQgZm9udFNpemUgPSAxMgogICAgICAgICAgICovCiAgICAgICAgICBmb250U2l6ZTogMTIKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gR2xvYmFsIGljb24gY29uZmlndXJhdGlvbgogICAgICAgICAqIEB0eXBlIHtJY29ufQogICAgICAgICAqLwogICAgICAgIGljb246IHsKICAgICAgICAgIC8qKgogICAgICAgICAgICogQGRlc2NyaXB0aW9uIFdoZXRoZXIgdG8gc2hvdyBpY29uCiAgICAgICAgICAgKiBAdHlwZSB7Qm9vbGVhbn0KICAgICAgICAgICAqIEBkZWZhdWx0IHNob3cgPSBmYWxzZQogICAgICAgICAgICovCiAgICAgICAgICBzaG93OiBmYWxzZSwKCiAgICAgICAgICAvKioKICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBJY29uIHNyYwogICAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgICAqIEBkZWZhdWx0IHNyYyA9ICcnCiAgICAgICAgICAgKi8KICAgICAgICAgIHNyYzogJycsCgogICAgICAgICAgLyoqCiAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gSWNvbiB3aWR0aAogICAgICAgICAgICogQHR5cGUge051bWJlcn0KICAgICAgICAgICAqIEBkZWZhdWx0IHdpZHRoID0gMTUKICAgICAgICAgICAqLwogICAgICAgICAgd2lkdGg6IDE1LAoKICAgICAgICAgIC8qKgogICAgICAgICAgICogQGRlc2NyaXB0aW9uIEljb24gaGVpZ2h0CiAgICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAgICogQGRlZmF1bHQgd2lkdGggPSAxNQogICAgICAgICAgICovCiAgICAgICAgICBoZWlnaHQ6IDE1CiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEdsb2JhbCBsaW5lIGNvbmZpZ3VyYXRpb24KICAgICAgICAgKiBAdHlwZSB7TGluZX0KICAgICAgICAgKi8KICAgICAgICBsaW5lOiB7CiAgICAgICAgICAvKioKICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBMaW5lIHdpZHRoCiAgICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAgICogQGRlZmF1bHQgd2lkdGggPSAxCiAgICAgICAgICAgKi8KICAgICAgICAgIHdpZHRoOiAxLAoKICAgICAgICAgIC8qKgogICAgICAgICAgICogQGRlc2NyaXB0aW9uIEZseWxpbmUgY29sb3IKICAgICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICAgKiBAZGVmYXVsdCBjb2xvciA9ICcjZmZkZTkzJwogICAgICAgICAgICovCiAgICAgICAgICBjb2xvcjogJyNmZmRlOTMnLAoKICAgICAgICAgIC8qKgogICAgICAgICAgICogQGRlc2NyaXB0aW9uIE9yYml0IGNvbG9yCiAgICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAgICogQGRlZmF1bHQgb3JiaXRDb2xvciA9ICdyZ2JhKDEwMywgMjI0LCAyMjcsIC4yKScKICAgICAgICAgICAqLwogICAgICAgICAgb3JiaXRDb2xvcjogJ3JnYmEoMTAzLCAyMjQsIDIyNywgLjIpJywKCiAgICAgICAgICAvKioKICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBGbHlsaW5lIGFuaW1hdGlvbiBkdXJhdGlvbgogICAgICAgICAgICogQHR5cGUge1tudW1iZXIsIG51bWJlcl19CiAgICAgICAgICAgKiBAZGVmYXVsdCBkdXJhdGlvbiA9IFsyMCwgMzBdCiAgICAgICAgICAgKi8KICAgICAgICAgIGR1cmF0aW9uOiBbMjAsIDMwXSwKCiAgICAgICAgICAvKioKICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBGbHlsaW5lIHJhZGl1cwogICAgICAgICAgICogQHR5cGUge051bWJlcn0KICAgICAgICAgICAqIEBkZWZhdWx0IHJhZGl1cyA9IDEwMAogICAgICAgICAgICovCiAgICAgICAgICByYWRpdXM6IDEwMAogICAgICAgIH0sCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBCYWNrIGdyb3VuZCBpbWFnZSB1cmwKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGJnSW1nU3JjID0gJycKICAgICAgICAgKi8KICAgICAgICBiZ0ltZ1NyYzogJycsCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBLIHZhbHVlCiAgICAgICAgICogQHR5cGUge051bWJlcn0KICAgICAgICAgKiBAZGVmYXVsdCBrID0gLTAuNQogICAgICAgICAqIEBleGFtcGxlIGsgPSAtMSB+IDEKICAgICAgICAgKi8KICAgICAgICBrOiAtMC41LAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gRmx5bGluZSBjdXJ2YXR1cmUKICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAqIEBkZWZhdWx0IGN1cnZhdHVyZSA9IDUKICAgICAgICAgKi8KICAgICAgICBjdXJ2YXR1cmU6IDUsCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBSZWxhdGl2ZSBwb2ludHMgcG9zaXRpb24KICAgICAgICAgKiBAdHlwZSB7Qm9vbGVhbn0KICAgICAgICAgKiBAZGVmYXVsdCByZWxhdGl2ZSA9IHRydWUKICAgICAgICAgKi8KICAgICAgICByZWxhdGl2ZTogdHJ1ZQogICAgICB9LAoKICAgICAgLyoqCiAgICAgICAqIEBkZXNjcmlwdGlvbiBGbHkgbGluZSBkYXRhCiAgICAgICAqIEB0eXBlIHtGbHlsaW5lV2l0aFBhdGhbXX0KICAgICAgICogQGRlZmF1bHQgZmx5bGluZXMgPSBbXQogICAgICAgKi8KICAgICAgZmx5bGluZXM6IFtdLAoKICAgICAgLyoqCiAgICAgICAqIEBkZXNjcmlwdGlvbiBGbHkgbGluZSBsZW5ndGhzCiAgICAgICAqIEB0eXBlIHtOdW1iZXJbXX0KICAgICAgICogQGRlZmF1bHQgZmx5bGluZUxlbmd0aHMgPSBbXQogICAgICAgKi8KICAgICAgZmx5bGluZUxlbmd0aHM6IFtdLAoKICAgICAgLyoqCiAgICAgICAqIEBkZXNjcmlwdGlvbiBGbHkgbGluZSBwb2ludHMKICAgICAgICogQGRlZmF1bHQgZmx5bGluZVBvaW50cyA9IFtdCiAgICAgICAqLwogICAgICBmbHlsaW5lUG9pbnRzOiBbXSwKICAgICAgbWVyZ2VkQ29uZmlnOiBudWxsCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbmZpZzogZnVuY3Rpb24gY29uZmlnKCkgewogICAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgICBjYWxjRGF0YSgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0OiBmdW5jdGlvbiBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQoKSB7CiAgICAgIHZhciBjYWxjRGF0YSA9IHRoaXMuY2FsY0RhdGE7CiAgICAgIGNhbGNEYXRhKCk7CiAgICB9LAogICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkgewogICAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgICBjYWxjRGF0YSgpOwogICAgfSwKICAgIGNhbGNEYXRhOiBmdW5jdGlvbiBjYWxjRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIG1lcmdlQ29uZmlnLCBjYWxjZmx5bGluZVBvaW50cywgY2FsY0xpbmVQYXRocywgY2FsY0xpbmVMZW5ndGhzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIG1lcmdlQ29uZmlnID0gX3RoaXMubWVyZ2VDb25maWcsIGNhbGNmbHlsaW5lUG9pbnRzID0gX3RoaXMuY2FsY2ZseWxpbmVQb2ludHMsIGNhbGNMaW5lUGF0aHMgPSBfdGhpcy5jYWxjTGluZVBhdGhzOwogICAgICAgICAgICAgICAgbWVyZ2VDb25maWcoKTsKICAgICAgICAgICAgICAgIGNhbGNmbHlsaW5lUG9pbnRzKCk7CiAgICAgICAgICAgICAgICBjYWxjTGluZVBhdGhzKCk7CiAgICAgICAgICAgICAgICBjYWxjTGluZUxlbmd0aHMgPSBfdGhpcy5jYWxjTGluZUxlbmd0aHM7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBjYWxjTGluZUxlbmd0aHMoKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG1lcmdlQ29uZmlnOiBmdW5jdGlvbiBtZXJnZUNvbmZpZygpIHsKICAgICAgdmFyIGNvbmZpZyA9IHRoaXMuY29uZmlnLAogICAgICAgICAgZGVmYXVsdENvbmZpZyA9IHRoaXMuZGVmYXVsdENvbmZpZzsKICAgICAgdmFyIG1lcmdlZENvbmZpZyA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbmZpZywgdHJ1ZSksIGNvbmZpZyB8fCB7fSk7CiAgICAgIHZhciBwb2ludHMgPSBtZXJnZWRDb25maWcucG9pbnRzLAogICAgICAgICAgbGluZXMgPSBtZXJnZWRDb25maWcubGluZXMsCiAgICAgICAgICBoYWxvID0gbWVyZ2VkQ29uZmlnLmhhbG8sCiAgICAgICAgICB0ZXh0ID0gbWVyZ2VkQ29uZmlnLnRleHQsCiAgICAgICAgICBpY29uID0gbWVyZ2VkQ29uZmlnLmljb24sCiAgICAgICAgICBsaW5lID0gbWVyZ2VkQ29uZmlnLmxpbmU7CiAgICAgIG1lcmdlZENvbmZpZy5wb2ludHMgPSBwb2ludHMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgaXRlbS5oYWxvID0gZGVlcE1lcmdlKGRlZXBDbG9uZShoYWxvLCB0cnVlKSwgaXRlbS5oYWxvIHx8IHt9KTsKICAgICAgICBpdGVtLnRleHQgPSBkZWVwTWVyZ2UoZGVlcENsb25lKHRleHQsIHRydWUpLCBpdGVtLnRleHQgfHwge30pOwogICAgICAgIGl0ZW0uaWNvbiA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoaWNvbiwgdHJ1ZSksIGl0ZW0uaWNvbiB8fCB7fSk7CiAgICAgICAgcmV0dXJuIGl0ZW07CiAgICAgIH0pOwogICAgICBtZXJnZWRDb25maWcubGluZXMgPSBsaW5lcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gZGVlcE1lcmdlKGRlZXBDbG9uZShsaW5lLCB0cnVlKSwgaXRlbSk7CiAgICAgIH0pOwogICAgICB0aGlzLm1lcmdlZENvbmZpZyA9IG1lcmdlZENvbmZpZzsKICAgIH0sCiAgICBjYWxjZmx5bGluZVBvaW50czogZnVuY3Rpb24gY2FsY2ZseWxpbmVQb2ludHMoKSB7CiAgICAgIHZhciBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZywKICAgICAgICAgIHdpZHRoID0gdGhpcy53aWR0aCwKICAgICAgICAgIGhlaWdodCA9IHRoaXMuaGVpZ2h0OwogICAgICB2YXIgcmVsYXRpdmUgPSBtZXJnZWRDb25maWcucmVsYXRpdmUsCiAgICAgICAgICBwb2ludHMgPSBtZXJnZWRDb25maWcucG9pbnRzOwogICAgICB0aGlzLmZseWxpbmVQb2ludHMgPSBwb2ludHMubWFwKGZ1bmN0aW9uIChpdGVtLCBpKSB7CiAgICAgICAgdmFyIF9pdGVtJGNvb3JkaW5hdGUgPSBfc2xpY2VkVG9BcnJheShpdGVtLmNvb3JkaW5hdGUsIDIpLAogICAgICAgICAgICB4ID0gX2l0ZW0kY29vcmRpbmF0ZVswXSwKICAgICAgICAgICAgeSA9IF9pdGVtJGNvb3JkaW5hdGVbMV0sCiAgICAgICAgICAgIGhhbG8gPSBpdGVtLmhhbG8sCiAgICAgICAgICAgIGljb24gPSBpdGVtLmljb24sCiAgICAgICAgICAgIHRleHQgPSBpdGVtLnRleHQ7CgogICAgICAgIGlmIChyZWxhdGl2ZSkgaXRlbS5jb29yZGluYXRlID0gW3ggKiB3aWR0aCwgeSAqIGhlaWdodF07CiAgICAgICAgaXRlbS5oYWxvLnRpbWUgPSByYW5kb21FeHRlbmQuYXBwbHkodm9pZCAwLCBfdG9Db25zdW1hYmxlQXJyYXkoaGFsby5kdXJhdGlvbikpIC8gMTA7CiAgICAgICAgdmFyIGl3ID0gaWNvbi53aWR0aCwKICAgICAgICAgICAgaWggPSBpY29uLmhlaWdodDsKICAgICAgICBpdGVtLmljb24ueCA9IGl0ZW0uY29vcmRpbmF0ZVswXSAtIGl3IC8gMjsKICAgICAgICBpdGVtLmljb24ueSA9IGl0ZW0uY29vcmRpbmF0ZVsxXSAtIGloIC8gMjsKCiAgICAgICAgdmFyIF90ZXh0JG9mZnNldCA9IF9zbGljZWRUb0FycmF5KHRleHQub2Zmc2V0LCAyKSwKICAgICAgICAgICAgb3ggPSBfdGV4dCRvZmZzZXRbMF0sCiAgICAgICAgICAgIG95ID0gX3RleHQkb2Zmc2V0WzFdOwoKICAgICAgICBpdGVtLnRleHQueCA9IGl0ZW0uY29vcmRpbmF0ZVswXSArIG94OwogICAgICAgIGl0ZW0udGV4dC55ID0gaXRlbS5jb29yZGluYXRlWzFdICsgb3k7CiAgICAgICAgaXRlbS5rZXkgPSAiIi5jb25jYXQoaXRlbS5jb29yZGluYXRlLnRvU3RyaW5nKCkpLmNvbmNhdChpKTsKICAgICAgICByZXR1cm4gaXRlbTsKICAgICAgfSk7CiAgICB9LAogICAgY2FsY0xpbmVQYXRoczogZnVuY3Rpb24gY2FsY0xpbmVQYXRocygpIHsKICAgICAgdmFyIGdldFBhdGggPSB0aGlzLmdldFBhdGgsCiAgICAgICAgICBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZzsKICAgICAgdmFyIHBvaW50cyA9IG1lcmdlZENvbmZpZy5wb2ludHMsCiAgICAgICAgICBsaW5lcyA9IG1lcmdlZENvbmZpZy5saW5lczsKICAgICAgdGhpcy5mbHlsaW5lcyA9IGxpbmVzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHZhciBzb3VyY2UgPSBpdGVtLnNvdXJjZSwKICAgICAgICAgICAgdGFyZ2V0ID0gaXRlbS50YXJnZXQsCiAgICAgICAgICAgIGR1cmF0aW9uID0gaXRlbS5kdXJhdGlvbjsKICAgICAgICB2YXIgc291cmNlUG9pbnQgPSBwb2ludHMuZmluZChmdW5jdGlvbiAoX3JlZikgewogICAgICAgICAgdmFyIG5hbWUgPSBfcmVmLm5hbWU7CiAgICAgICAgICByZXR1cm4gbmFtZSA9PT0gc291cmNlOwogICAgICAgIH0pLmNvb3JkaW5hdGU7CiAgICAgICAgdmFyIHRhcmdldFBvaW50ID0gcG9pbnRzLmZpbmQoZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgICAgICB2YXIgbmFtZSA9IF9yZWYyLm5hbWU7CiAgICAgICAgICByZXR1cm4gbmFtZSA9PT0gdGFyZ2V0OwogICAgICAgIH0pLmNvb3JkaW5hdGU7CiAgICAgICAgdmFyIHBhdGggPSBnZXRQYXRoKHNvdXJjZVBvaW50LCB0YXJnZXRQb2ludCkubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodi50b0ZpeGVkKDEwKSk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgICB2YXIgZCA9ICJNIi5jb25jYXQocGF0aFswXS50b1N0cmluZygpLCAiIFEiKS5jb25jYXQocGF0aFsxXS50b1N0cmluZygpLCAiICIpLmNvbmNhdChwYXRoWzJdLnRvU3RyaW5nKCkpOwogICAgICAgIHZhciBrZXkgPSAicGF0aCIuY29uY2F0KHBhdGgudG9TdHJpbmcoKSk7CiAgICAgICAgdmFyIHRpbWUgPSByYW5kb21FeHRlbmQuYXBwbHkodm9pZCAwLCBfdG9Db25zdW1hYmxlQXJyYXkoZHVyYXRpb24pKSAvIDEwOwogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGl0ZW0pLCB7fSwgewogICAgICAgICAgcGF0aDogcGF0aCwKICAgICAgICAgIGtleToga2V5LAogICAgICAgICAgZDogZCwKICAgICAgICAgIHRpbWU6IHRpbWUKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0UGF0aDogZnVuY3Rpb24gZ2V0UGF0aChzdGFydCwgZW5kKSB7CiAgICAgIHZhciBnZXRDb250cm9sUG9pbnQgPSB0aGlzLmdldENvbnRyb2xQb2ludDsKICAgICAgdmFyIGNvbnRyb2xQb2ludCA9IGdldENvbnRyb2xQb2ludChzdGFydCwgZW5kKTsKICAgICAgcmV0dXJuIFtzdGFydCwgY29udHJvbFBvaW50LCBlbmRdOwogICAgfSwKICAgIGdldENvbnRyb2xQb2ludDogZnVuY3Rpb24gZ2V0Q29udHJvbFBvaW50KF9yZWYzLCBfcmVmNCkgewogICAgICB2YXIgX3JlZjUgPSBfc2xpY2VkVG9BcnJheShfcmVmMywgMiksCiAgICAgICAgICBzeCA9IF9yZWY1WzBdLAogICAgICAgICAgc3kgPSBfcmVmNVsxXTsKCiAgICAgIHZhciBfcmVmNiA9IF9zbGljZWRUb0FycmF5KF9yZWY0LCAyKSwKICAgICAgICAgIGV4ID0gX3JlZjZbMF0sCiAgICAgICAgICBleSA9IF9yZWY2WzFdOwoKICAgICAgdmFyIGdldEtMaW5lUG9pbnRCeXggPSB0aGlzLmdldEtMaW5lUG9pbnRCeXgsCiAgICAgICAgICBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZzsKICAgICAgdmFyIGN1cnZhdHVyZSA9IG1lcmdlZENvbmZpZy5jdXJ2YXR1cmUsCiAgICAgICAgICBrID0gbWVyZ2VkQ29uZmlnLms7CiAgICAgIHZhciBteCA9IChzeCArIGV4KSAvIDIsCiAgICAgICAgICBteSA9IChzeSArIGV5KSAvIDI7CiAgICAgIHZhciBkaXN0YW5jZSA9IGdldFBvaW50RGlzdGFuY2UoW3N4LCBzeV0sIFtleCwgZXldKTsKICAgICAgdmFyIHRhcmdldExlbmd0aCA9IGRpc3RhbmNlIC8gY3VydmF0dXJlOwogICAgICB2YXIgZGlzRGl2ZWQgPSB0YXJnZXRMZW5ndGggLyAyOwogICAgICB2YXIgZHggPSBteCwKICAgICAgICAgIGR5ID0gbXk7CgogICAgICBkbyB7CiAgICAgICAgZHggKz0gZGlzRGl2ZWQ7CiAgICAgICAgZHkgPSBnZXRLTGluZVBvaW50Qnl4KGssIFtteCwgbXldLCBkeClbMV07CiAgICAgIH0gd2hpbGUgKGdldFBvaW50RGlzdGFuY2UoW214LCBteV0sIFtkeCwgZHldKSA8IHRhcmdldExlbmd0aCk7CgogICAgICByZXR1cm4gW2R4LCBkeV07CiAgICB9LAogICAgZ2V0S0xpbmVQb2ludEJ5eDogZnVuY3Rpb24gZ2V0S0xpbmVQb2ludEJ5eChrLCBfcmVmNywgeCkgewogICAgICB2YXIgX3JlZjggPSBfc2xpY2VkVG9BcnJheShfcmVmNywgMiksCiAgICAgICAgICBseCA9IF9yZWY4WzBdLAogICAgICAgICAgbHkgPSBfcmVmOFsxXTsKCiAgICAgIHZhciB5ID0gbHkgLSBrICogbHggKyBrICogeDsKICAgICAgcmV0dXJuIFt4LCB5XTsKICAgIH0sCiAgICBjYWxjTGluZUxlbmd0aHM6IGZ1bmN0aW9uIGNhbGNMaW5lTGVuZ3RocygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgJG5leHRUaWNrLCBmbHlsaW5lcywgJHJlZnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICRuZXh0VGljayA9IF90aGlzMi4kbmV4dFRpY2ssIGZseWxpbmVzID0gX3RoaXMyLmZseWxpbmVzLCAkcmVmcyA9IF90aGlzMi4kcmVmczsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiAkbmV4dFRpY2soKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3RoaXMyLmZseWxpbmVMZW5ndGhzID0gZmx5bGluZXMubWFwKGZ1bmN0aW9uIChfcmVmOSkgewogICAgICAgICAgICAgICAgICB2YXIga2V5ID0gX3JlZjkua2V5OwogICAgICAgICAgICAgICAgICByZXR1cm4gJHJlZnNba2V5XVswXS5nZXRUb3RhbExlbmd0aCgpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNvbnNvbGVDbGlja1BvczogZnVuY3Rpb24gY29uc29sZUNsaWNrUG9zKF9yZWYxMCkgewogICAgICB2YXIgb2Zmc2V0WCA9IF9yZWYxMC5vZmZzZXRYLAogICAgICAgICAgb2Zmc2V0WSA9IF9yZWYxMC5vZmZzZXRZOwogICAgICB2YXIgd2lkdGggPSB0aGlzLndpZHRoLAogICAgICAgICAgaGVpZ2h0ID0gdGhpcy5oZWlnaHQsCiAgICAgICAgICBkZXYgPSB0aGlzLmRldjsKICAgICAgaWYgKCFkZXYpIHJldHVybjsKICAgICAgdmFyIHJlbGF0aXZlWCA9IChvZmZzZXRYIC8gd2lkdGgpLnRvRml4ZWQoMik7CiAgICAgIHZhciByZWxhdGl2ZVkgPSAob2Zmc2V0WSAvIGhlaWdodCkudG9GaXhlZCgyKTsKICAgICAgY29uc29sZS53YXJuKCJkdi1mbHlsaW5lLWNoYXJ0LWVuaGFuY2VkIERFVjogXG4gQ2xpY2sgUG9zaXRpb24gaXMgWyIuY29uY2F0KG9mZnNldFgsICIsICIpLmNvbmNhdChvZmZzZXRZLCAiXSBcbiBSZWxhdGl2ZSBQb3NpdGlvbiBpcyBbIikuY29uY2F0KHJlbGF0aXZlWCwgIiwgIikuY29uY2F0KHJlbGF0aXZlWSwgIl0iKSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA,SAAA,SAAA,QAAA,kCAAA;AAEA,SAAA,SAAA,QAAA,qCAAA;AAEA,SAAA,YAAA,EAAA,gBAAA,EAAA,IAAA,QAAA,qBAAA;AAEA,OAAA,UAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAHA;AAaA,EAAA,IAbA,kBAaA;AACA,QAAA,EAAA,GAAA,IAAA,EAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,2BADA;AAEA,MAAA,MAAA,EAAA,IAAA,CAAA,MAAA,EAFA;AAGA,MAAA,iBAAA,gCAAA,EAAA,CAHA;AAIA,MAAA,cAAA,6BAAA,EAAA,CAJA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,aAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,MAAA,EAAA,EANA;;AAOA;AACA;AACA;AACA;AACA;AACA,QAAA,KAAA,EAAA,EAZA;;AAaA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,IAAA,EAAA,KANA;;AAOA;AACA;AACA;AACA;AACA,UAAA,QAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAXA;;AAYA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,SAjBA;;AAkBA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA;AAvBA,SAjBA;;AA0CA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,IAAA,EAAA,KANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,SAlBA;;AAmBA;AACA;AACA;AACA;AACA;AACA,UAAA,QAAA,EAAA;AAxBA,SA9CA;;AAwEA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,IAAA,EAAA,KANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,GAAA,EAAA,EAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,EAlBA;;AAmBA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA;AAxBA,SA5EA;;AAsGA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,CANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,SAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,UAAA,EAAA,yBAlBA;;AAmBA;AACA;AACA;AACA;AACA;AACA,UAAA,QAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAxBA;;AAyBA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA;AA9BA,SA1GA;;AA0IA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA,EA/IA;;AAgJA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,CAAA,EAAA,CAAA,GAtJA;;AAuJA;AACA;AACA;AACA;AACA;AACA,QAAA,SAAA,EAAA,CA5JA;;AA6JA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA;AAlKA,OAxDA;;AA4NA;AACA;AACA;AACA;AACA;AACA,MAAA,QAAA,EAAA,EAjOA;;AAkOA;AACA;AACA;AACA;AACA;AACA,MAAA,cAAA,EAAA,EAvOA;;AAwOA;AACA;AACA;AACA;AACA,MAAA,aAAA,EAAA,EA5OA;AA8OA,MAAA,YAAA,EAAA;AA9OA,KAAA;AAgPA,GA/PA;AAgQA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAEA,MAAA,QAAA;AACA;AALA,GAhQA;AAuQA,EAAA,OAAA,EAAA;AACA,IAAA,wBADA,sCACA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAEA,MAAA,QAAA;AACA,KALA;AAMA,IAAA,QANA,sBAMA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAEA,MAAA,QAAA;AACA,KAVA;AAWA,IAAA,QAXA,sBAWA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,WADA,GACA,KADA,CACA,WADA,EACA,iBADA,GACA,KADA,CACA,iBADA,EACA,aADA,GACA,KADA,CACA,aADA;AAGA,gBAAA,WAAA;AAEA,gBAAA,iBAAA;AAEA,gBAAA,aAAA;AAEA,gBAAA,eATA,GASA,KATA,CASA,eATA;AAAA;AAAA,uBAWA,eAAA,EAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,KAvBA;AAwBA,IAAA,WAxBA,yBAwBA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,UAAA,aAAA,GAAA,IAAA,CAAA,aAAA;AAEA,UAAA,YAAA,GAAA,SAAA,CAAA,SAAA,CAAA,aeAAA,IAAA;AACA,OANA,CAAA;AAQA,MAAA,YAAA,CAAA,KAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,SAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA;AACA,OAFA,CAAA;AAIA,WAAA,YAAA,GAAA,YAAA;AACA,KA5CA;AA6CA,IAAA,iBA7CA,+BA6CA;AACA,UAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AAAA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AAAA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAEA,UAAA,QAAA,GAAA,YAAA,CAAA,QAAA;AAAA,UAAA,MAAA,GAAA,YAAA,CAAA,MAAA;AAEA,WAAA,aAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,CAAA,EAAA;AACA,8CAAA,IAAA,CAAA,UAAA;AAAA,YAAA,CAAA;AAAA,YAAA,CAAA;AAAA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AAAA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AAAA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA;;AAEA,YAAA,QAAA,EAAA,IAAA,CAAA,UAAA,GAAA,CAAA,CAAA,GAAA,KAAA,EAAA,CAAA,GAAA,MAAA,CAAA;AAEA,QAAA,IAAA,CAAA,IAAA,CAAA,IAAA,GAAA,YAAA,MAAA,4BAAA,IAAA,CAAA,QAAA,KAAA,EAAA;AAEA,YAAA,EAAA,GAAA,IAAA,CAAA,KAAA;AAAA,YAAA,EAAA,GAAA,IAAA,CAAA,MAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,GAAA,CAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,GAAA,CAAA;;AAEA,0CAAA,IAAA,CAAA,MAAA;AAAA,YAAA,EAAA;AAAA,YAAA,EAAA;;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA;AAEA,QAAA,IAAA,CAAA,GAAA,aAAA,IAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,CAAA;AAEA,eAAA,IAAA;AACA,OAlBA,CAAA;AAmBA,KArEA;AAsEA,IAAA,aAtEA,2BAsEA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,OAAA;AAAA,UAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AAEA,UAAA,MAAA,GAAA,YAAA,CAAA,MAAA;AAAA,UAAA,KAAA,GAAA,YAAA,CAAA,KAAA;AAEA,WAAA,QAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,YAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,YAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAEA,YAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,QAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,MAAA;AAAA,SAAA,EAAA,UAAA;AACA,YAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,SAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,MAAA;AAAA,SAAA,EAAA,UAAA;AAEA,YAAA,IAAA,GAAA,OAAA,CAAA,WAAA,EAAA,WAAA,CAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,UAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA;AAAA,WAAA,CAAA;AAAA,SAAA,CAAA;AACA,YAAA,CAAA,cAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,eAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,cAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,CAAA;AACA,YAAA,GAAA,iBAAA,IAAA,CAAA,QAAA,EAAA,CAAA;AACA,YAAA,IAAA,GAAA,YAAA,MAAA,4BAAA,QAAA,KAAA,EAAA;AAEA,+CAAA,IAAA;AAAA,UAAA,IAAA,EAAA,IAAA;AAAA,UAAA,GAAA,EAAA,GAAA;AAAA,UAAA,CAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AACA,OAZA,CAAA;AAaA,KAxFA;AAyFA,IAAA,OAzFA,mBAyFA,KAzFA,EAyFA,GAzFA,EAyFA;AACA,UAAA,eAAA,GAAA,IAAA,CAAA,eAAA;AAEA,UAAA,YAAA,GAAA,eAAA,CAAA,KAAA,EAAA,GAAA,CAAA;AAEA,aAAA,CAAA,KAAA,EAAA,YAAA,EAAA,GAAA,CAAA;AACA,KA/FA;AAgGA,IAAA,eAhGA,yCAgGA;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AACA,UAAA,gBAAA,GAAA,IAAA,CAAA,gBAAA;AAAA,UAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AAEA,UAAA,SAAA,GAAA,YAAA,CAAA,SAAA;AAAA,UAAA,CAAA,GAAA,YAAA,CAAA,CAAA;AAEA,UAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,IAAA,CAAA;AAAA,UAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,IAAA,CAAA;AAEA,UAAA,QAAA,GAAA,gBAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA;AAEA,UAAA,YAAA,GAAA,QAAA,GAAA,SAAA;AACA,UAAA,QAAA,GAAA,YAAA,GAAA,CAAA;AAEA,UAAA,EAAA,GAAA,EAAA;AAAA,UAAA,EAAA,GAAA,EAAA;;AAEA,SAAA;AACA,QAAA,EAAA,IAAA,QAAA;AACA,QAAA,EAAA,GAAA,gBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAHA,QAGA,gBAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,GAAA,YAHA;;AAKA,aAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AACA,KApHA;AAqHA,IAAA,gBArHA,4BAqHA,CArHA,SAqHA,CArHA,EAqHA;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AACA,UAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA;AAEA,aAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,KAzHA;AA0HA,IAAA,eA1HA,6BA0HA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,SADA,GACA,MADA,CACA,SADA,EACA,QADA,GACA,MADA,CACA,QADA,EACA,KADA,GACA,MADA,CACA,KADA;AAAA;AAAA,uBAGA,SAAA,EAHA;;AAAA;AAKA,gBAAA,MAAA,CAAA,cAAA,GAAA,QAAA,CAAA,GAAA,CAAA;AAAA,sBAAA,GAAA,SAAA,GAAA;AAAA,yBAAA,KAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,cAAA,EAAA;AAAA,iBAAA,CAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAhIA;AAiIA,IAAA,eAjIA,mCAiIA;AAAA,UAAA,OAAA,UAAA,OAAA;AAAA,UAAA,OAAA,UAAA,OAAA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AAAA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,UAAA,GAAA,GAAA,IAAA,CAAA,GAAA;AAEA,UAAA,CAAA,GAAA,EAAA;AAEA,UAAA,SAAA,GAAA,CAAA,OAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,UAAA,SAAA,GAAA,CAAA,OAAA,GAAA,MAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AAEA,MAAA,OAAA,CAAA,IAAA,gEAAA,OAAA,eAAA,OAAA,wCAAA,SAAA,eAAA,SAAA;AACA;AA1IA;AAvQA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart-enhanced\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgSrc : ''})`\"\n    :ref=\"ref\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"flylines.length\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"flylineGradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"haloGradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n      </defs>\n\n      <!-- points -->\n      <g v-for=\"point in flylinePoints\" :key=\"point.key + Math.random()\">\n        <defs>\n          <circle\n            v-if=\"point.halo.show\"\n            :id=\"`halo${unique}${point.key}`\"\n            :cx=\"point.coordinate[0]\"\n            :cy=\"point.coordinate[1]\"\n          >\n            <animate\n              attributeName=\"r\"\n              :values=\"`1;${point.halo.radius}`\"\n              :dur=\"`${point.halo.time}s`\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              :dur=\"`${point.halo.time}s`\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </defs>\n\n        <!-- halo gradient mask -->\n        <mask :id=\"`mask${unique}${point.key}`\">\n          <use\n            v-if=\"point.halo.show\"\n            :xlink:href=\"`#halo${unique}${point.key}`\"\n            :fill=\"`url(#${haloGradientId})`\"\n          />\n        </mask>\n\n        <!-- point halo -->\n        <use\n          v-if=\"point.halo.show\"\n          :xlink:href=\"`#halo${unique}${point.key}`\"\n          :fill=\"point.halo.color\"\n          :mask=\"`url(#mask${unique}${point.key})`\"\n        />\n\n        <!-- point icon -->\n        <image\n          v-if=\"point.icon.show\"\n          :xlink:href=\"point.icon.src\"\n          :width=\"point.icon.width\"\n          :height=\"point.icon.height\"\n          :x=\"point.icon.x\"\n          :y=\"point.icon.y\"\n        />\n\n        <!-- point text -->\n        <text\n          v-if=\"point.text.show\"\n          :style=\"`fontSize:${point.text.fontSize}px;color:${point.text.color}`\"\n          :fill=\"point.text.color\"\n          :x=\"point.text.x\"\n          :y=\"point.text.y\"\n        >\n          {{ point.name }}\n        </text>\n      </g>\n\n      <!-- flylines -->\n      <g v-for=\"(line, i) in flylines\" :key=\"line.key + Math.random()\">\n        <defs>\n          <path\n            :id=\"line.key\"\n            :ref=\"line.key\"\n            :d=\"line.d\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <!-- orbit line -->\n        <use\n          :xlink:href=\"`#${line.key}`\"\n          :stroke-width=\"line.width\"\n          :stroke=\"line.orbitColor\"\n        />\n\n        <!-- fly line gradient mask -->\n        <mask :id=\"`mask${unique}${line.key}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"line.radius\" :fill=\"`url(#${flylineGradientId})`\">\n            <animateMotion\n              :dur=\"line.time\"\n              :path=\"line.d\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <!-- fly line -->\n        <use\n          v-if=\"flylineLengths[i]\"\n          :xlink:href=\"`#${line.key}`\"\n          :stroke-width=\"line.width\"\n          :stroke=\"line.color\"\n          :mask=\"`url(#mask${unique}${line.key})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${flylineLengths[i]}`\"\n            :to=\"`${flylineLengths[i]}, 0`\"\n            :dur=\"line.time\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChartEnhanced',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'dv-flyline-chart-enhanced',\n      unique: Math.random(),\n      flylineGradientId: `flyline-gradient-id-${id}`,\n      haloGradientId: `halo-gradient-id-${id}`,\n      /**\n       * @description Type Declaration\n       * \n       * interface Halo {\n       *    show?: boolean\n       *    duration?: [number, number]\n       *    color?: string\n       *    radius?: number\n       * }\n       * \n       * interface Text {\n       *    show?: boolean\n       *    offset?: [number, number]\n       *    color?: string\n       *    fontSize?: number\n       * }\n       * \n       * interface Icon {\n       *    show?: boolean\n       *    src?: string\n       *    width?: number\n       *    height?: number\n       * }\n       * \n       * interface Point {\n       *    name: string\n       *    coordinate: [number, number]\n       *    halo?: Halo\n       *    text?: Text\n       *    icon?: Icon\n       * }\n       * \n       * interface Line {\n       *    width?: number\n       *    color?: string\n       *    orbitColor?: string\n       *    duration?: [number, number]\n       *    radius?: string\n       * }\n       * \n       * interface Flyline extends Line {\n       *    source: string\n       *    target: string\n       * }\n       * \n       * interface FlylineWithPath extends Flyline {\n       *    d: string\n       *    path: [[number, number], [number, number], [number, number]]\n       *    key: string\n       * }\n       */\n      defaultConfig: {\n        /**\n         * @description Flyline chart points\n         * @type {Point[]}\n         * @default points = []\n         */\n        points: [],\n        /**\n         * @description Lines\n         * @type {Flyline[]}\n         * @default lines = []\n         */\n        lines: [],\n        /**\n         * @description Global halo configuration\n         * @type {Halo}\n         */\n        halo: {\n          /**\n           * @description Whether to show halo\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Halo animation duration (1s = 10)\n           * @type {[number, number]}\n           */\n          duration: [20, 30],\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Global text configuration\n         * @type {Text}\n         */\n        text: {\n          /**\n           * @description Whether to show text\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Text offset\n           * @type {[number, number]}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Global icon configuration\n         * @type {Icon}\n         */\n        icon: {\n          /**\n           * @description Whether to show icon\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Icon src\n           * @type {String}\n           * @default src = ''\n           */\n          src: '',\n          /**\n           * @description Icon width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Icon height\n           * @type {Number}\n           * @default width = 15\n           */\n          height: 15\n        },\n        /**\n         * @description Global line configuration\n         * @type {Line}\n         */\n        line: {\n          /**\n           * @description Line width\n           * @type {Number}\n           * @default width = 1\n           */\n          width: 1,\n          /**\n           * @description Flyline color\n           * @type {String}\n           * @default color = '#ffde93'\n           */\n          color: '#ffde93',\n          /**\n           * @description Orbit color\n           * @type {String}\n           * @default orbitColor = 'rgba(103, 224, 227, .2)'\n           */\n          orbitColor: 'rgba(103, 224, 227, .2)',\n          /**\n           * @description Flyline animation duration\n           * @type {[number, number]}\n           * @default duration = [20, 30]\n           */\n          duration: [20, 30],\n          /**\n           * @description Flyline radius\n           * @type {Number}\n           * @default radius = 100\n           */\n          radius: 100\n        },\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgSrc = ''\n         */\n        bgImgSrc: '',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true\n      },\n      /**\n       * @description Fly line data\n       * @type {FlylineWithPath[]}\n       * @default flylines = []\n       */\n      flylines: [],\n      /**\n       * @description Fly line lengths\n       * @type {Number[]}\n       * @default flylineLengths = []\n       */\n      flylineLengths: [],\n      /**\n       * @description Fly line points\n       * @default flylinePoints = []\n       */\n      flylinePoints: [],\n\n      mergedConfig: null\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, calcflylinePoints, calcLinePaths } = this\n\n      mergeConfig()\n\n      calcflylinePoints()\n\n      calcLinePaths()\n\n      const { calcLineLengths } = this\n\n      await calcLineLengths()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points, lines, halo, text, icon, line } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        item.halo = deepMerge(deepClone(halo, true), item.halo || {})\n        item.text = deepMerge(deepClone(text, true), item.text || {})\n        item.icon = deepMerge(deepClone(icon, true), item.icon || {})\n\n        return item\n      })\n\n      mergedConfig.lines = lines.map(item => {\n        return deepMerge(deepClone(line, true), item)\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    calcflylinePoints () {\n      const { mergedConfig, width, height } = this\n\n      const { relative, points } = mergedConfig\n\n      this.flylinePoints = points.map((item, i) => {\n        const { coordinate: [x, y], halo, icon, text } = item\n\n        if (relative) item.coordinate = [x * width, y * height]\n\n        item.halo.time = randomExtend(...halo.duration) / 10\n\n        const { width: iw, height: ih } = icon\n        item.icon.x = item.coordinate[0] - iw / 2\n        item.icon.y = item.coordinate[1] - ih / 2\n\n        const [ox, oy] = text.offset\n        item.text.x = item.coordinate[0] + ox\n        item.text.y = item.coordinate[1] + oy\n\n        item.key = `${item.coordinate.toString()}${i}`\n\n        return item\n      })\n    },\n    calcLinePaths () {\n      const { getPath, mergedConfig } = this\n\n      const { points, lines } = mergedConfig\n\n      this.flylines = lines.map(item => {\n        const { source, target, duration } = item\n\n        const sourcePoint = points.find(({ name }) => name === source).coordinate\n        const targetPoint = points.find(({ name }) => name === target).coordinate\n\n        const path = getPath(sourcePoint, targetPoint).map(item => item.map(v => parseFloat(v.toFixed(10))))\n        const d = `M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\n        const key = `path${path.toString()}`\n        const time = randomExtend(...duration) / 10\n\n        return { ...item, path, key, d, time }\n      })\n    },\n    getPath (start, end) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(start, end)\n\n      return [start, controlPoint, end]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, flylines, $refs } = this\n\n      await $nextTick()\n\n      this.flylineLengths = flylines.map(({ key }) => $refs[key][0].getTotalLength())\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart-enhanced DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/flylineChartEnhanced/src"}]}