{"remainingRequest":"C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\src\\router\\permission.js","dependencies":[{"path":"C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\src\\router\\permission.js","mtime":1652251439000},{"path":"C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvODYxODgvRGVza3RvcC8yMi9lcGlkZW1pY21hbmFnZW1lbnR3ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvODYxODgvRGVza3RvcC8yMi9lcGlkZW1pY21hbmFnZW1lbnR3ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vIOi3r+eUseeahOWFqOWxgOWuiOWNqwovLyDmnYPpmZDmjqfliLbpgLvovpEKaW1wb3J0IHJvdXRlciBmcm9tICIuL2luZGV4IjsKaW1wb3J0IHN0b3JlIGZyb20gIi4uL3N0b3JlL2luZGV4IjsgLy/lvJXlhaVucHJvZ3Jlc3Mg6L+b5bqm5p2h5o+S5Lu2CgppbXBvcnQgTlByb2dyZXNzIGZyb20gIm5wcm9ncmVzcyI7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICJlbGVtZW50LXVpIjsKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICJAL3V0aWxzL2F1dGgiOyAvLyDku45jb29raWXojrflj5bku6TniYwKLy8g566A5Y2V6YWN572uICDov5vluqbmnaEKCk5Qcm9ncmVzcy5pbmMoMC4yKTsKTlByb2dyZXNzLmNvbmZpZ3VyZSh7CiAgZWFzaW5nOiAiZWFzZSIsCiAgc3BlZWQ6IDUwMCwKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7CnZhciB3aGl0ZUxpc3QgPSBbIi9sb2dpbiIsICIvcmVnaXN0ZXIiXTsgLy/mjpLpmaTnmoTot6/lvoQKCnJvdXRlci5iZWZvcmVFYWNoKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRvLCBmcm9tLCBuZXh0KSB7CiAgICB2YXIgaGFzVG9rZW4sIGhhc1JvbGVzLCBfeWllbGQkc3RvcmUkZGlzcGF0Y2gsIHJvbGVzLCBhY2Nlc3NSb3V0ZXM7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBOUHJvZ3Jlc3Muc3RhcnQoKTsgLy8g6I635Y+W5Luk54mM5Yik5pat55So5oi35piv5ZCm55m76ZmGCgogICAgICAgICAgICBoYXNUb2tlbiA9IGdldFRva2VuKCk7IC8vIOacieS7pOeJjCDooajnpLrlt7Lnu4/nmbvpmYYKCiAgICAgICAgICAgIGlmICghaGFzVG9rZW4pIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghKHRvLnBhdGggPT09ICIvbG9naW4iKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyDlt7LnmbvlvZXph43lrprlkJHliLDpppbpobUKICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgcGF0aDogIi8iCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzA7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgLy/oi6XnlKjmiLfop5LoibLlt7LpmYTliqDliJnor7TmmI7liqjmgIHot6/nlLHlt7Lnu4/mt7vliqAKICAgICAgICAgICAgaGFzUm9sZXMgPSBzdG9yZS5nZXR0ZXJzLnJvbGVzICYmIHN0b3JlLmdldHRlcnMucm9sZXMubGVuZ3RoID4gMDsKCiAgICAgICAgICAgIGlmICghaGFzUm9sZXMpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8v6KeS6Imy5a2Y5ZyoCiAgICAgICAgICAgIG5leHQoKTsgLy/nu6fnu63ljbPlj68KCiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEyOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgidXNlci9nZXRJbmZvIik7CgogICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgX3lpZWxkJHN0b3JlJGRpc3BhdGNoID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcm9sZXMgPSBfeWllbGQkc3RvcmUkZGlzcGF0Y2gucm9sZXM7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCJwZXJtaXNzaW9uL2dlbmVyYXRlUm91dGVzIiwgcm9sZXMpOwoKICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgIGFjY2Vzc1JvdXRlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIC8vIOa3u+WKoOi/meS6m+i3r+eUseiHs+i3r+eUseWZqAogICAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcyk7IC8vIOe7p+e7rei3r+eUseWIh+aNoiznoa7kv51hZGRSb3V0ZXPlrozmiJAKCiAgICAgICAgICAgIG5leHQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0byksIHt9LCB7CiAgICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZQogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI0OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEyKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI4OwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goInVzZXIvcmVzZXRUb2tlbiIpOwoKICAgICAgICAgIGNhc2UgMjg6CiAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IoX2NvbnRleHQudDAgfHwgIue9kee7nOmUmeivryIpOwogICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwoKICAgICAgICAgIGNhc2UgMzA6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAzMjoKICAgICAgICAgICAgLy8g55So5oi35peg5Luk54mMCiAgICAgICAgICAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZih0by5wYXRoKSAhPT0gLTEpIHsKICAgICAgICAgICAgICAvL+eZveWQjeWNlei3r+eUseaUvui/hwogICAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyDph43lrprlkJHoh7PnmbvlvZXpobUKICAgICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSAzMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEyLCAyNF1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MiwgX3gzKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSk7CnJvdXRlci5hZnRlckVhY2goZnVuY3Rpb24gKCkgewogIE5Qcm9ncmVzcy5kb25lKCk7Cn0pOw=="},{"version":3,"sources":["C:/Users/86188/Desktop/22/epidemicmanagementweb/src/router/permission.js"],"names":["router","store","NProgress","Message","getToken","inc","configure","easing","speed","showSpinner","whiteList","beforeEach","to","from","next","start","hasToken","path","hasRoles","getters","roles","length","dispatch","accessRoutes","addRoutes","replace","error","indexOf","afterEach","done"],"mappings":";;;AAAA;AAEA;AACA,OAAOA,MAAP,MAAmB,SAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAAyC;AAEzC;;AACAF,SAAS,CAACG,GAAV,CAAc,GAAd;AACAH,SAAS,CAACI,SAAV,CAAoB;AAAEC,EAAAA,MAAM,EAAE,MAAV;AAAkBC,EAAAA,KAAK,EAAE,GAAzB;AAA8BC,EAAAA,WAAW,EAAE;AAA3C,CAApB;AAEA,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,WAAX,CAAlB,C,CAA2C;;AAE3CV,MAAM,CAACW,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACdZ,YAAAA,SAAS,CAACa,KAAV,GADc,CAEd;;AACMC,YAAAA,QAHQ,GAGGZ,QAAQ,EAHX,EAId;;AAJc,iBAKVY,QALU;AAAA;AAAA;AAAA;;AAAA,kBAMNJ,EAAE,CAACK,IAAH,KAAY,QANN;AAAA;AAAA;AAAA;;AAON;AACAH,YAAAA,IAAI,CAAC;AAAEG,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AARM;AAAA;;AAAA;AAUN;AACMC,YAAAA,QAXA,GAWWjB,KAAK,CAACkB,OAAN,CAAcC,KAAd,IAAuBnB,KAAK,CAACkB,OAAN,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,CAX/D;;AAAA,iBAaFH,QAbE;AAAA;AAAA;AAAA;;AAcF;AACAJ,YAAAA,IAAI,GAfF,CAeM;;AAfN;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAmB0Bb,KAAK,CAACqB,QAAN,CAAe,cAAf,CAnB1B;;AAAA;AAAA;AAmBUF,YAAAA,KAnBV,yBAmBUA,KAnBV;AAAA;AAAA,mBAsB6BnB,KAAK,CAACqB,QAAN,CACvB,2BADuB,EAEvBF,KAFuB,CAtB7B;;AAAA;AAsBQG,YAAAA,YAtBR;AA2BE;AACAvB,YAAAA,MAAM,CAACwB,SAAP,CAAiBD,YAAjB,EA5BF,CA8BE;;AACAT,YAAAA,IAAI,iCAAKF,EAAL;AAASa,cAAAA,OAAO,EAAE;AAAlB,eAAJ;AA/BF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAkCQxB,KAAK,CAACqB,QAAN,CAAe,iBAAf,CAlCR;;AAAA;AAmCEnB,YAAAA,OAAO,CAACuB,KAAR,CAAc,eAAS,MAAvB;AACAZ,YAAAA,IAAI,2BAAoBF,EAAE,CAACK,IAAvB,EAAJ;;AApCF;AAAA;AAAA;;AAAA;AAyCV;AACA,gBAAIP,SAAS,CAACiB,OAAV,CAAkBf,EAAE,CAACK,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACnC;AACAH,cAAAA,IAAI;AACP,aAHD,MAGO;AACH;AACAA,cAAAA,IAAI,2BAAoBF,EAAE,CAACK,IAAvB,EAAJ;AACH;;AAhDS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAoDAjB,MAAM,CAAC4B,SAAP,CAAiB,YAAM;AACnB1B,EAAAA,SAAS,CAAC2B,IAAV;AACH,CAFD","sourcesContent":["// 路由的全局守卫\n\n// 权限控制逻辑\nimport router from \"./index\";\nimport store from \"../store/index\";\n\n//引入nprogress 进度条插件\nimport NProgress from \"nprogress\";\n\nimport { Message } from \"element-ui\";\nimport { getToken } from \"@/utils/auth\"; // 从cookie获取令牌\n\n// 简单配置  进度条\nNProgress.inc(0.2);\nNProgress.configure({ easing: \"ease\", speed: 500, showSpinner: false });\n\nconst whiteList = [\"/login\", \"/register\"]; //排除的路径\n\nrouter.beforeEach(async(to, from, next) => {\n    NProgress.start();\n    // 获取令牌判断用户是否登陆\n    const hasToken = getToken();\n    // 有令牌 表示已经登陆\n    if (hasToken) {\n        if (to.path === \"/login\") {\n            // 已登录重定向到首页\n            next({ path: \"/\" });\n        } else {\n            //若用户角色已附加则说明动态路由已经添加\n            const hasRoles = store.getters.roles && store.getters.roles.length > 0;\n\n            if (hasRoles) {\n                //角色存在\n                next(); //继续即可\n            } else {\n                try {\n                    //先请求获取用户角色\n                    const { roles } = await store.dispatch(\"user/getInfo\");\n\n                    // 根据当前用户角色动态生成路由\n                    const accessRoutes = await store.dispatch(\n                        \"permission/generateRoutes\",\n                        roles\n                    );\n\n                    // 添加这些路由至路由器\n                    router.addRoutes(accessRoutes);\n\n                    // 继续路由切换,确保addRoutes完成\n                    next({...to, replace: true });\n                } catch (error) {\n                    // 出错需要重置令牌并重新登陆(令牌过期,网络错误等原因)\n                    await store.dispatch(\"user/resetToken\");\n                    Message.error(error || \"网络错误\");\n                    next(`/login?redirect=${to.path}`);\n                }\n            }\n        }\n    } else {\n        // 用户无令牌\n        if (whiteList.indexOf(to.path) !== -1) {\n            //白名单路由放过\n            next();\n        } else {\n            // 重定向至登录页\n            next(`/login?redirect=${to.path}`);\n        }\n    }\n});\n\nrouter.afterEach(() => {\n    NProgress.done();\n});"]}]}