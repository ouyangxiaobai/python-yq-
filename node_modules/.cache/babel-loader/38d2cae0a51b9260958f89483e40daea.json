{"remainingRequest":"C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\src\\store\\modules\\permission.js","dependencies":[{"path":"C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\src\\store\\modules\\permission.js","mtime":1652251439000},{"path":"C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86188\\Desktop\\22\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvODYxODgvRGVza3RvcC8yMi9lcGlkZW1pY21hbmFnZW1lbnR3ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKLy8g5p2D6ZmQ566h55CG5qih5Z2XCmltcG9ydCB7IGFzeW5jUm91dGVzLCBjb25zdFJvdXRlciB9IGZyb20gJ0Avcm91dGVyJzsKLyoqCiAqIOagueaNrui3r+eUsW1ldGEucm9sZSDnoa7lrprmmK/lkKblvZPliY3nlKjmiLfmi6XmnInorr/pl67mnYPpmZAKICogQHJvbGVzIOeUqOaIt+aLpeacieinkuiJsgogKiBAcm91dGUg5b6F5Yik5a6a6Lev55SxCiAqIAogKiAKICogCiovCgpmdW5jdGlvbiBoYXNQZXJtaXNzaW9uKHJvbGVzLCByb3V0ZSkgewogIC8vIOWmguaenOW9k+WJjei3r+eUseaciXJvbGVzIOWtl+auteWImemcgOimgeWIpOaWreeUqOaIt+iuv+mXruadg+mZkAogIGlmIChyb3V0ZS5tZXRhICYmIHJvdXRlLm1ldGEucm9sZXMpIHsKICAgIC8vIOiLpeeUqOaIt+aLpeacieeahOinkuiJsuS4reacieiiq+WMheWQq+WcqOW+heWumui3r+eUseinkuiJsuihqOS4reeahOWImeaLpeacieiuv+mXruadg+mZkAogICAgcmV0dXJuIHJvbGVzLnNvbWUoZnVuY3Rpb24gKHJvbGUpIHsKICAgICAgcmV0dXJuIHJvdXRlLm1ldGEucm9sZXMuaW5jbHVkZXMocm9sZSk7CiAgICB9KTsKICB9IGVsc2UgewogICAgLy8g5rKh5pyJ6K6+572ucm9sZXMg5YiZ5peg6ZyA5Yik5a6a5Y2z5Y+v6K6/6ZeuCiAgICByZXR1cm4gdHJ1ZTsKICB9Cn0KLyoqCiAqIOmAkuW9kui/h+a7pEFzeW5jUm91dGVz6Lev55Sx6KGoCiAqIEByb3V0ZXMg5b6F6L+H5ruk6Lev55Sx6KGoLOmmluasoeS8oOWFpeeahOWwseaYr0FzeW5jUm91dGVzCiAqIEByb2xlcyDnlKjmiLfmi6XmnInop5LoibIKICogCiovCgoKZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckFzeW5jUm91dGVzKHJvdXRlcywgcm9sZXMpIHsKICB2YXIgcmVzID0gW107CiAgcm91dGVzLmZvckVhY2goZnVuY3Rpb24gKHJvdXRlKSB7CiAgICAvLyDlpI3liLbkuIDku70KICAgIHZhciB0bXAgPSBfb2JqZWN0U3ByZWFkKHt9LCByb3V0ZSk7IC8vIOWmguaenOeUqOaIt+acieiuv+mXruadg+mZkOWImeWKoOWFpee7k+aenOi3r+eUseihqAoKCiAgICBpZiAoaGFzUGVybWlzc2lvbihyb2xlcywgdG1wKSkgewogICAgICAvLyDlpoLmnpzlrZjlnKjlrZDot6/nlLHliJnpgJLlvZLov4fmu6TkuYsKICAgICAgaWYgKHRtcC5jaGlsZHJlbikgewogICAgICAgIHRtcC5jaGlsZHJlbiA9IGZpbHRlckFzeW5jUm91dGVzKHRtcC5jaGlsZHJlbiwgcm9sZXMpOwogICAgICB9CgogICAgICByZXMucHVzaCh0bXApOwogICAgfQogIH0pOwogIHJldHVybiByZXM7Cn0KdmFyIHN0YXRlID0gewogIHJvdXRlczogW10sCiAgLy/lrozmlbTot6/nlLHooagKICBhZGRSb3V0ZXM6IFtdIC8v55So5oi35Y+v6K6/6Zeu6Lev55Sx6KGoCgp9Owp2YXIgbXV0YXRpb25zID0gewogIFNFVF9ST1VURVM6IGZ1bmN0aW9uIFNFVF9ST1VURVMoc3RhdGUsIHJvdXRlcykgewogICAgLy8gcm91dGVzIOeUqOaIt+WPr+S7peiuv+mXrueahOadg+mZkAogICAgc3RhdGUuYWRkUm91dGVzID0gcm91dGVzOyAvLyDlrozmlbTnmoTot6/nlLHooagKCiAgICBzdGF0ZS5yb3V0ZXMgPSBjb25zdFJvdXRlci5jb25jYXQocm91dGVzKTsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGdlbmVyYXRlUm91dGVzOiBmdW5jdGlvbiBnZW5lcmF0ZVJvdXRlcyhfcmVmLCByb2xlcykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgIHZhciBhY2Nlc3NlZFJvdXRlczsgLy8g55So5oi35piv566h55CG5ZGY5YiZ5oul5pyJ5a6M5pW06K6/6Zeu5p2D6ZmQCgogICAgICBpZiAocm9sZXMuaW5jbHVkZXMoJ2FkbWluJykpIHsKICAgICAgICBhY2Nlc3NlZFJvdXRlcyA9IGFzeW5jUm91dGVzIHx8IFtdOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIGNvbnNvbGUubG9nKHJvbGVzKQogICAgICAgIC8vICDlkKbliJnpnIDopoHmoLnmja7nlKjmiLfop5LoibLlgZrov4fmu6TlpITnkIYgamVycnkKICAgICAgICBhY2Nlc3NlZFJvdXRlcyA9IGZpbHRlckFzeW5jUm91dGVzKGFzeW5jUm91dGVzLCByb2xlcyk7CiAgICAgIH0KCiAgICAgIGNvbW1pdCgnU0VUX1JPVVRFUycsIGFjY2Vzc2VkUm91dGVzKTsKICAgICAgcmVzb2x2ZShhY2Nlc3NlZFJvdXRlcyk7CiAgICB9KTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["C:/Users/86188/Desktop/22/epidemicmanagementweb/src/store/modules/permission.js"],"names":["asyncRoutes","constRouter","hasPermission","roles","route","meta","some","role","includes","filterAsyncRoutes","routes","res","forEach","tmp","children","push","state","addRoutes","mutations","SET_ROUTES","concat","actions","generateRoutes","commit","Promise","resolve","accessedRoutes","namespaced"],"mappings":";;;;;;AAAA;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAwBC,KAAxB,EAA8BC,KAA9B,EAAoC;AAEhC;AACA,MAAGA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWF,KAA5B,EAAkC;AAC9B;AACA,WAAOA,KAAK,CAACG,IAAN,CAAW,UAAAC,IAAI;AAAA,aAAIH,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAiBK,QAAjB,CAA0BD,IAA1B,CAAJ;AAAA,KAAf,CAAP;AACH,GAHD,MAGM;AACF;AACA,WAAO,IAAP;AACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASE,iBAAT,CAA2BC,MAA3B,EAAkCP,KAAlC,EAAwC;AAC3C,MAAMQ,GAAG,GAAG,EAAZ;AAEAD,EAAAA,MAAM,CAACE,OAAP,CAAe,UAAAR,KAAK,EAAI;AACpB;AACA,QAAMS,GAAG,qBAAQT,KAAR,CAAT,CAFoB,CAIpB;;;AACA,QAAGF,aAAa,CAACC,KAAD,EAAOU,GAAP,CAAhB,EAA4B;AACxB;AACA,UAAGA,GAAG,CAACC,QAAP,EAAgB;AACZD,QAAAA,GAAG,CAACC,QAAJ,GAAeL,iBAAiB,CAACI,GAAG,CAACC,QAAL,EAAcX,KAAd,CAAhC;AACH;;AACDQ,MAAAA,GAAG,CAACI,IAAJ,CAASF,GAAT;AACH;AACJ,GAZD;AAcA,SAAOF,GAAP;AACH;AAED,IAAMK,KAAK,GAAG;AACVN,EAAAA,MAAM,EAAE,EADE;AACE;AACZO,EAAAA,SAAS,EAAE,EAFD,CAEK;;AAFL,CAAd;AAKA,IAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,oBAACH,KAAD,EAAQN,MAAR,EAAmB;AAC3B;AACAM,IAAAA,KAAK,CAACC,SAAN,GAAkBP,MAAlB,CAF2B,CAG3B;;AAEAM,IAAAA,KAAK,CAACN,MAAN,GAAeT,WAAW,CAACmB,MAAZ,CAAmBV,MAAnB,CAAf;AAEH;AARa,CAAlB;AAWA,IAAMW,OAAO,GAAG;AACZC,EAAAA,cADY,gCACenB,KADf,EACsB;AAAA,QAAjBoB,MAAiB,QAAjBA,MAAiB;AAC9B,WAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAE1B,UAAIC,cAAJ,CAF0B,CAG1B;;AACA,UAAGvB,KAAK,CAACK,QAAN,CAAe,OAAf,CAAH,EAA2B;AACvBkB,QAAAA,cAAc,GAAG1B,WAAW,IAAI,EAAhC;AACH,OAFD,MAEK;AACD;AACA;AACA0B,QAAAA,cAAc,GAAGjB,iBAAiB,CAACT,WAAD,EAAaG,KAAb,CAAlC;AACH;;AAEDoB,MAAAA,MAAM,CAAC,YAAD,EAAcG,cAAd,CAAN;AAEAD,MAAAA,OAAO,CAACC,cAAD,CAAP;AACH,KAfM,CAAP;AAgBH;AAlBW,CAAhB;AAqBA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXX,EAAAA,KAAK,EAALA,KAFW;AAGXE,EAAAA,SAAS,EAATA,SAHW;AAIXG,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["// 权限管理模块\nimport { asyncRoutes, constRouter } from '@/router'\n\n/**\n * 根据路由meta.role 确定是否当前用户拥有访问权限\n * @roles 用户拥有角色\n * @route 待判定路由\n * \n * \n * \n*/\nfunction hasPermission (roles,route){\n   \n    // 如果当前路由有roles 字段则需要判断用户访问权限\n    if(route.meta && route.meta.roles){\n        // 若用户拥有的角色中有被包含在待定路由角色表中的则拥有访问权限\n        return roles.some(role => route.meta.roles.includes(role))\n    } else{\n        // 没有设置roles 则无需判定即可访问\n        return true;\n    }\n}\n\n/**\n * 递归过滤AsyncRoutes路由表\n * @routes 待过滤路由表,首次传入的就是AsyncRoutes\n * @roles 用户拥有角色\n * \n*/\nexport function filterAsyncRoutes(routes,roles){\n    const res = []\n   \n    routes.forEach(route => {\n        // 复制一份\n        const tmp = { ...route}\n       \n        // 如果用户有访问权限则加入结果路由表\n        if(hasPermission(roles,tmp)){\n            // 如果存在子路由则递归过滤之\n            if(tmp.children){\n                tmp.children = filterAsyncRoutes(tmp.children,roles)\n            }\n            res.push(tmp)\n        }\n    })\n    \n    return res;\n}\n\nconst state = {\n    routes: [], //完整路由表\n    addRoutes: []  //用户可访问路由表\n}\n\nconst mutations = {\n    SET_ROUTES: (state, routes) => {\n        // routes 用户可以访问的权限\n        state.addRoutes = routes\n        // 完整的路由表\n        \n        state.routes = constRouter.concat(routes)\n       \n    }\n}\n\nconst actions = {\n    generateRoutes({ commit }, roles) {\n        return new Promise(resolve => {\n            \n            let accessedRoutes;\n            // 用户是管理员则拥有完整访问权限\n            if(roles.includes('admin')){\n                accessedRoutes = asyncRoutes || []\n            }else{\n                // console.log(roles)\n                //  否则需要根据用户角色做过滤处理 jerry\n                accessedRoutes = filterAsyncRoutes(asyncRoutes,roles)\n            }\n          \n            commit('SET_ROUTES',accessedRoutes)\n       \n            resolve(accessedRoutes)\n        })\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions\n}"]}]}