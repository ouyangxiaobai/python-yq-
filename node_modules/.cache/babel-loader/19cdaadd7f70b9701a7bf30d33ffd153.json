{"remainingRequest":"D:\\共享文件\\code space\\疫情统计分析软件\\22\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js!D:\\共享文件\\code space\\疫情统计分析软件\\22\\epidemicmanagementweb\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\共享文件\\code space\\疫情统计分析软件\\22\\epidemicmanagementweb\\src\\store\\modules\\user.js","mtime":1652439824000},{"path":"D:\\共享文件\\code space\\疫情统计分析软件\\22\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\共享文件\\code space\\疫情统计分析软件\\22\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGdldFRva2VuLCBzZXRUb2tlbiwgcmVtb3ZlVG9rZW4gfSBmcm9tICJAL3V0aWxzL2F1dGgiOwppbXBvcnQgeyBsb2dpbiBhcyBfbG9naW4sIGxvZ291dCwgZ2V0SW5mbyB9IGZyb20gIkAvYXBpL3VzZXIiOwppbXBvcnQgeyBNZXNzYWdlLCBMb2FkaW5nIH0gZnJvbSAnZWxlbWVudC11aSc7IC8vIOadkei1pOeUqOaIt+S7pOeJjOWSjOinkuiJsuS/oeaBrwoKdmFyIHN0YXRlID0gewogIHRva2VuOiBnZXRUb2tlbigpLAogIHJvbGVzOiBbXSAvL+inkuiJsgoKfTsKdmFyIG11dGF0aW9ucyA9IHsKICBTRVRfVE9LRU46IGZ1bmN0aW9uIFNFVF9UT0tFTihzdGF0ZSwgdG9rZW4pIHsKICAgIHN0YXRlLnRva2VuID0gdG9rZW47CiAgfSwKICBTRVRfUk9MRVM6IGZ1bmN0aW9uIFNFVF9ST0xFUyhzdGF0ZSwgcm9sZXMpIHsKICAgIHN0YXRlLnJvbGVzID0gcm9sZXM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICAvLyDnlKjmiLfnmbvlvZUKICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgdXNlckluZm8pIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIHZhciB1c2VybmFtZSA9IHVzZXJJbmZvLnVzZXJuYW1lLAogICAgICAgIHBhc3N3b3JkID0gdXNlckluZm8ucGFzc3dvcmQ7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgZGF0YXMgPSB7CiAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQKICAgICAgICB9OwoKICAgICAgICBfbG9naW4oZGF0YXMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAvLyBkZWJ1Z2dlcjsKICAgICAgICAgIGNvbnNvbGUubG9nKCLov5nkuKrmmK/or7fmsYLlj4LmlbAiLCByZXNwb25zZSk7CgogICAgICAgICAgaWYgKHJlc3BvbnNlLnJlcyA9PSAxKSB7CiAgICAgICAgICAgIE1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6ICLnmbvlvZXmiJDlip8iLAogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIE1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLnJlcywKICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgIH0KCiAgICAgICAgICBjb21taXQoIlNFVF9UT0tFTiIsIHVzZXJuYW1lKTsKICAgICAgICAgIHNldFRva2VuKHVzZXJuYW1lKTsKICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIC8vIOiOt+WPlueUqOaIt+inkuiJsuS/oeaBrwogIGdldEluZm86IGZ1bmN0aW9uIGdldEluZm8oX3JlZjIpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQsCiAgICAgICAgc3RhdGUgPSBfcmVmMi5zdGF0ZTsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcm9sZXMgPSBzdGF0ZS50b2tlbiA9PT0gImFkbWluIiA/IFsiYWRtaW4iXSA6IFsiamVycnkiXTsKICAgICAgICBjb21taXQoIlNFVF9ST0xFUyIsIHJvbGVzKTsKICAgICAgICByZXNvbHZlKHsKICAgICAgICAgIHJvbGVzOiByb2xlcwogICAgICAgIH0pOwogICAgICB9LCAxMDAwKTsKICAgIH0pOwogIH0sCiAgLy8g6YeN572u5Luk54mMCiAgcmVzZXRUb2tlbjogZnVuY3Rpb24gcmVzZXRUb2tlbihfcmVmMykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICBjb21taXQoIlNFVF9UT0tFTiIsICIiKTsKICAgICAgY29tbWl0KCJTRVRfUk9MRVMiLCBbXSk7CiAgICAgIHJlbW92ZVRva2VuKCk7CiAgICAgIHJlc29sdmUoKTsKICAgIH0pOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMKfTs="},{"version":3,"sources":["D:/共享文件/code space/疫情统计分析软件/22/epidemicmanagementweb/src/store/modules/user.js"],"names":["getToken","setToken","removeToken","login","logout","getInfo","Message","Loading","state","token","roles","mutations","SET_TOKEN","SET_ROLES","actions","userInfo","commit","username","password","Promise","resolve","reject","setTimeout","datas","then","response","console","log","res","message","type","resetToken","namespaced"],"mappings":"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","sourcesContent":["import { getToken, setToken, removeToken } from \"@/utils/auth\";\nimport { login, logout, getInfo } from \"@/api/user\";\nimport { Message, Loading } from 'element-ui'\n// 村赤用户令牌和角色信息\nconst state = {\n    token: getToken(),\n    roles: [], //角色\n};\n\nconst mutations = {\n    SET_TOKEN: (state, token) => {\n        state.token = token;\n    },\n    SET_ROLES: (state, roles) => {\n        state.roles = roles;\n    },\n};\n\nconst actions = {\n    // 用户登录\n    login({ commit }, userInfo) {\n        const { username,password } = userInfo;\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                var datas = { username: username,password: password };\n                login(datas)\n                    .then((response) => {\n                        // debugger;\n                        console.log(\"这个是请求参数\", response);\n                        if (response.res == 1) {\n                            Message({\n                                message: \"登录成功\",\n                                type: 'success'\n                              })  \n                        } else {\n                            Message({\n                                message: response.res,\n                                type: 'warning'\n                              })                           \n                            return false\n                        }\n                        commit(\"SET_TOKEN\", username);\n                        setToken(username);\n                        resolve();\n                    })\n            });\n        });\n    },\n    // 获取用户角色信息\n    getInfo({ commit, state }) {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                const roles = state.token === \"admin\" ? [\"admin\"] : [\"jerry\"];\n                commit(\"SET_ROLES\", roles);\n                resolve({ roles });\n            }, 1000);\n        });\n    },\n    // 重置令牌\n    resetToken({ commit }) {\n        return new Promise((resolve) => {\n            commit(\"SET_TOKEN\", \"\");\n            commit(\"SET_ROLES\", []);\n            removeToken();\n            resolve();\n        });\n    },\n};\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n};"]}]}