{"remainingRequest":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js!D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\@jiaminghi\\data-view\\lib\\components\\digitalFlop\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\@jiaminghi\\data-view\\lib\\components\\digitalFlop\\src\\main.vue","mtime":499162500000},{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\共享文件\\code space\\python疫情统计分析软件源码新闻爬虫+论文第三稿（已降重）\\epidemicmanagementweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkQ6L1x1NTE3MVx1NEVBQlx1NjU4N1x1NEVGNi9jb2RlIHNwYWNlL3B5dGhvblx1NzVBQlx1NjBDNVx1N0VERlx1OEJBMVx1NTIwNlx1Njc5MFx1OEY2Rlx1NEVGNlx1NkU5MFx1NzgwMVx1NjVCMFx1OTVGQlx1NzIyQ1x1ODY2QitcdThCQkFcdTY1ODdcdTdCMkNcdTRFMDlcdTdBM0ZcdUZGMDhcdTVERjJcdTk2NERcdTkxQ0RcdUZGMDkvZXBpZGVtaWNtYW5hZ2VtZW50d2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENSZW5kZXIgZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlcic7CmltcG9ydCAnQGppYW1pbmdoaS9jaGFydHMvbGliL2V4dGVuZC9pbmRleCc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2RGlnaXRhbEZsb3AnLAogIHByb3BzOiB7CiAgICBjb25maWc6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZW5kZXJlcjogbnVsbCwKICAgICAgZGVmYXVsdENvbmZpZzogewogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBOdW1iZXIgZm9yIGRpZ2l0YWwgZmxvcAogICAgICAgICAqIEB0eXBlIHtBcnJheTxOdW1iZXI+fQogICAgICAgICAqIEBkZWZhdWx0IG51bWJlciA9IFtdCiAgICAgICAgICogQGV4YW1wbGUgbnVtYmVyID0gWzEwXQogICAgICAgICAqLwogICAgICAgIG51bWJlcjogW10sCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDb250ZW50IGZvcm1hdHRlcgogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgY29udGVudCA9ICcnCiAgICAgICAgICogQGV4YW1wbGUgY29udGVudCA9ICd7bnR95LiqJwogICAgICAgICAqLwogICAgICAgIGNvbnRlbnQ6ICcnLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gTnVtYmVyIHRvRml4ZWQKICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAqIEBkZWZhdWx0IHRvRml4ZWQgPSAwCiAgICAgICAgICovCiAgICAgICAgdG9GaXhlZDogMCwKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFRleHQgYWxpZ24KICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IHRleHRBbGlnbiA9ICdjZW50ZXInCiAgICAgICAgICogQGV4YW1wbGUgdGV4dEFsaWduID0gJ2NlbnRlcicgfCAnbGVmdCcgfCAncmlnaHQnCiAgICAgICAgICovCiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJywKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIHJvd0dhcAogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9CiAgICAgICAgIEBkZWZhdWx0IHJvd0dhcCA9IDAKICAgICAgICAgKi8KICAgICAgICByb3dHYXA6IDAsCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBUZXh0IHN0eWxlIGNvbmZpZ3VyYXRpb24KICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fSB7Q1JlbmRlciBDbGFzcyBTdHlsZX0KICAgICAgICAgKi8KICAgICAgICBzdHlsZTogewogICAgICAgICAgZm9udFNpemU6IDMwLAogICAgICAgICAgZmlsbDogJyMzZGU3YzknCiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIE51bWJlciBmb3JtYXR0ZXIKICAgICAgICAgKiBAdHlwZSB7TnVsbHxGdW5jdGlvbn0KICAgICAgICAgKi8KICAgICAgICBmb3JtYXR0ZXI6IHVuZGVmaW5lZCwKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENSZW5kZXIgYW5pbWF0aW9uQ3VydmUKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGFuaW1hdGlvbkN1cnZlID0gJ2Vhc2VPdXRDdWJpYycKICAgICAgICAgKi8KICAgICAgICBhbmltYXRpb25DdXJ2ZTogJ2Vhc2VPdXRDdWJpYycsCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDUmVuZGVyIGFuaW1hdGlvbkZyYW1lCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCBhbmltYXRpb25GcmFtZSA9IDUwCiAgICAgICAgICovCiAgICAgICAgYW5pbWF0aW9uRnJhbWU6IDUwCiAgICAgIH0sCiAgICAgIG1lcmdlZENvbmZpZzogbnVsbCwKICAgICAgZ3JhcGg6IG51bGwKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29uZmlnOiBmdW5jdGlvbiBjb25maWcoKSB7CiAgICAgIHZhciB1cGRhdGUgPSB0aGlzLnVwZGF0ZTsKICAgICAgdXBkYXRlKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICB2YXIgaW5pdFJlbmRlciA9IHRoaXMuaW5pdFJlbmRlciwKICAgICAgICAgIG1lcmdlQ29uZmlnID0gdGhpcy5tZXJnZUNvbmZpZywKICAgICAgICAgIGluaXRHcmFwaCA9IHRoaXMuaW5pdEdyYXBoOwogICAgICBpbml0UmVuZGVyKCk7CiAgICAgIG1lcmdlQ29uZmlnKCk7CiAgICAgIGluaXRHcmFwaCgpOwogICAgfSwKICAgIGluaXRSZW5kZXI6IGZ1bmN0aW9uIGluaXRSZW5kZXIoKSB7CiAgICAgIHZhciAkcmVmcyA9IHRoaXMuJHJlZnM7CiAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgQ1JlbmRlcigkcmVmc1snZGlnaXRhbC1mbG9wJ10pOwogICAgfSwKICAgIG1lcmdlQ29uZmlnOiBmdW5jdGlvbiBtZXJnZUNvbmZpZygpIHsKICAgICAgdmFyIGRlZmF1bHRDb25maWcgPSB0aGlzLmRlZmF1bHRDb25maWcsCiAgICAgICAgICBjb25maWcgPSB0aGlzLmNvbmZpZzsKICAgICAgdGhpcy5tZXJnZWRDb25maWcgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb25maWcsIHRydWUpLCBjb25maWcgfHwge30pOwogICAgfSwKICAgIGluaXRHcmFwaDogZnVuY3Rpb24gaW5pdEdyYXBoKCkgewogICAgICB2YXIgZ2V0U2hhcGUgPSB0aGlzLmdldFNoYXBlLAogICAgICAgICAgZ2V0U3R5bGUgPSB0aGlzLmdldFN0eWxlLAogICAgICAgICAgcmVuZGVyZXIgPSB0aGlzLnJlbmRlcmVyLAogICAgICAgICAgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWc7CiAgICAgIHZhciBhbmltYXRpb25DdXJ2ZSA9IG1lcmdlZENvbmZpZy5hbmltYXRpb25DdXJ2ZSwKICAgICAgICAgIGFuaW1hdGlvbkZyYW1lID0gbWVyZ2VkQ29uZmlnLmFuaW1hdGlvbkZyYW1lOwogICAgICB2YXIgc2hhcGUgPSBnZXRTaGFwZSgpOwogICAgICB2YXIgc3R5bGUgPSBnZXRTdHlsZSgpOwogICAgICB0aGlzLmdyYXBoID0gcmVuZGVyZXIuYWRkKHsKICAgICAgICBuYW1lOiAnbnVtYmVyVGV4dCcsCiAgICAgICAgYW5pbWF0aW9uQ3VydmU6IGFuaW1hdGlvbkN1cnZlLAogICAgICAgIGFuaW1hdGlvbkZyYW1lOiBhbmltYXRpb25GcmFtZSwKICAgICAgICBzaGFwZTogc2hhcGUsCiAgICAgICAgc3R5bGU6IHN0eWxlCiAgICAgIH0pOwogICAgfSwKICAgIGdldFNoYXBlOiBmdW5jdGlvbiBnZXRTaGFwZSgpIHsKICAgICAgdmFyIF90aGlzJG1lcmdlZENvbmZpZyA9IHRoaXMubWVyZ2VkQ29uZmlnLAogICAgICAgICAgbnVtYmVyID0gX3RoaXMkbWVyZ2VkQ29uZmlnLm51bWJlciwKICAgICAgICAgIGNvbnRlbnQgPSBfdGhpcyRtZXJnZWRDb25maWcuY29udGVudCwKICAgICAgICAgIHRvRml4ZWQgPSBfdGhpcyRtZXJnZWRDb25maWcudG9GaXhlZCwKICAgICAgICAgIHRleHRBbGlnbiA9IF90aGlzJG1lcmdlZENvbmZpZy50ZXh0QWxpZ24sCiAgICAgICAgICByb3dHYXAgPSBfdGhpcyRtZXJnZWRDb25maWcucm93R2FwLAogICAgICAgICAgZm9ybWF0dGVyID0gX3RoaXMkbWVyZ2VkQ29uZmlnLmZvcm1hdHRlcjsKCiAgICAgIHZhciBfdGhpcyRyZW5kZXJlciRhcmVhID0gX3NsaWNlZFRvQXJyYXkodGhpcy5yZW5kZXJlci5hcmVhLCAyKSwKICAgICAgICAgIHcgPSBfdGhpcyRyZW5kZXJlciRhcmVhWzBdLAogICAgICAgICAgaCA9IF90aGlzJHJlbmRlcmVyJGFyZWFbMV07CgogICAgICB2YXIgcG9zaXRpb24gPSBbdyAvIDIsIGggLyAyXTsKICAgICAgaWYgKHRleHRBbGlnbiA9PT0gJ2xlZnQnKSBwb3NpdGlvblswXSA9IDA7CiAgICAgIGlmICh0ZXh0QWxpZ24gPT09ICdyaWdodCcpIHBvc2l0aW9uWzBdID0gdzsKICAgICAgcmV0dXJuIHsKICAgICAgICBudW1iZXI6IG51bWJlciwKICAgICAgICBjb250ZW50OiBjb250ZW50LAogICAgICAgIHRvRml4ZWQ6IHRvRml4ZWQsCiAgICAgICAgcG9zaXRpb246IHBvc2l0aW9uLAogICAgICAgIHJvd0dhcDogcm93R2FwLAogICAgICAgIGZvcm1hdHRlcjogZm9ybWF0dGVyCiAgICAgIH07CiAgICB9LAogICAgZ2V0U3R5bGU6IGZ1bmN0aW9uIGdldFN0eWxlKCkgewogICAgICB2YXIgX3RoaXMkbWVyZ2VkQ29uZmlnMiA9IHRoaXMubWVyZ2VkQ29uZmlnLAogICAgICAgICAgc3R5bGUgPSBfdGhpcyRtZXJnZWRDb25maWcyLnN0eWxlLAogICAgICAgICAgdGV4dEFsaWduID0gX3RoaXMkbWVyZ2VkQ29uZmlnMi50ZXh0QWxpZ247CiAgICAgIHJldHVybiBkZWVwTWVyZ2Uoc3R5bGUsIHsKICAgICAgICB0ZXh0QWxpZ246IHRleHRBbGlnbiwKICAgICAgICB0ZXh0QmFzZWxpbmU6ICdtaWRkbGUnCiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgbWVyZ2VDb25maWcgPSB0aGlzLm1lcmdlQ29uZmlnLAogICAgICAgICAgbWVyZ2VTaGFwZSA9IHRoaXMubWVyZ2VTaGFwZSwKICAgICAgICAgIGdldFNoYXBlID0gdGhpcy5nZXRTaGFwZSwKICAgICAgICAgIGdldFN0eWxlID0gdGhpcy5nZXRTdHlsZSwKICAgICAgICAgIGdyYXBoID0gdGhpcy5ncmFwaCwKICAgICAgICAgIG1lcmdlZENvbmZpZyA9IHRoaXMubWVyZ2VkQ29uZmlnOwogICAgICBncmFwaC5hbmltYXRpb25FbmQoKTsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgICAgaWYgKCFncmFwaCkgcmV0dXJuOwogICAgICB2YXIgYW5pbWF0aW9uQ3VydmUgPSBtZXJnZWRDb25maWcuYW5pbWF0aW9uQ3VydmUsCiAgICAgICAgICBhbmltYXRpb25GcmFtZSA9IG1lcmdlZENvbmZpZy5hbmltYXRpb25GcmFtZTsKICAgICAgdmFyIHNoYXBlID0gZ2V0U2hhcGUoKTsKICAgICAgdmFyIHN0eWxlID0gZ2V0U3R5bGUoKTsKICAgICAgbWVyZ2VTaGFwZShncmFwaCwgc2hhcGUpOwogICAgICBncmFwaC5hbmltYXRpb25DdXJ2ZSA9IGFuaW1hdGlvbkN1cnZlOwogICAgICBncmFwaC5hbmltYXRpb25GcmFtZSA9IGFuaW1hdGlvbkZyYW1lOwogICAgICBncmFwaC5hbmltYXRpb24oJ3N0eWxlJywgc3R5bGUsIHRydWUpOwogICAgICBncmFwaC5hbmltYXRpb24oJ3NoYXBlJywgc2hhcGUpOwogICAgfSwKICAgIG1lcmdlU2hhcGU6IGZ1bmN0aW9uIG1lcmdlU2hhcGUoZ3JhcGgsIHNoYXBlKSB7CiAgICAgIHZhciBjYWNoZU51bSA9IGdyYXBoLnNoYXBlLm51bWJlci5sZW5ndGg7CiAgICAgIHZhciBzaGFwZU51bSA9IHNoYXBlLm51bWJlci5sZW5ndGg7CiAgICAgIGlmIChjYWNoZU51bSAhPT0gc2hhcGVOdW0pIGdyYXBoLnNoYXBlLm51bWJlciA9IHNoYXBlLm51bWJlcjsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgaW5pdCA9IHRoaXMuaW5pdDsKICAgIGluaXQoKTsKICB9Cn07"},{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-digital-flop\">\n    <canvas ref=\"digital-flop\" />\n  </div>\n</template>\n\n<script>\nimport CRender from '@jiaminghi/c-render'\n\nimport '@jiaminghi/charts/lib/extend/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDigitalFlop',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      renderer: null,\n\n      defaultConfig: {\n        /**\n         * @description Number for digital flop\n         * @type {Array<Number>}\n         * @default number = []\n         * @example number = [10]\n         */\n        number: [],\n        /**\n         * @description Content formatter\n         * @type {String}\n         * @default content = ''\n         * @example content = '{nt}个'\n         */\n        content: '',\n        /**\n         * @description Number toFixed\n         * @type {Number}\n         * @default toFixed = 0\n         */\n        toFixed: 0,\n        /**\n         * @description Text align\n         * @type {String}\n         * @default textAlign = 'center'\n         * @example textAlign = 'center' | 'left' | 'right'\n         */\n        textAlign: 'center',\n        /**\n         * @description rowGap\n         * @type {Number}\n         @default rowGap = 0\n         */\n        rowGap: 0,\n        /**\n         * @description Text style configuration\n         * @type {Object} {CRender Class Style}\n         */\n        style: {\n          fontSize: 30,\n          fill: '#3de7c9'\n        },\n        /**\n         * @description Number formatter\n         * @type {Null|Function}\n         */\n        formatter: undefined,\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50\n      },\n\n      mergedConfig: null,\n\n      graph: null\n    }\n  },\n  watch: {\n    config () {\n      const { update } = this\n\n      update()\n    }\n  },\n  methods: {\n    init () {\n      const { initRender, mergeConfig, initGraph } = this\n\n      initRender()\n\n      mergeConfig()\n\n      initGraph()\n    },\n    initRender () {\n      const { $refs } = this\n\n      this.renderer = new CRender($refs['digital-flop'])\n    },\n    mergeConfig () {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    initGraph () {\n      const { getShape, getStyle, renderer, mergedConfig } = this\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      this.graph = renderer.add({\n        name: 'numberText',\n        animationCurve,\n        animationFrame,\n        shape,\n        style\n      })\n    },\n    getShape () {\n      const { number, content, toFixed, textAlign, rowGap, formatter } = this.mergedConfig\n\n      const [w, h] = this.renderer.area\n\n      const position = [w / 2, h / 2]\n\n      if (textAlign === 'left') position[0] = 0\n      if (textAlign === 'right') position[0] = w\n\n      return {\n        number,\n        content,\n        toFixed,\n        position,\n        rowGap,\n        formatter\n      }\n    },\n    getStyle () {\n      const { style, textAlign } = this.mergedConfig\n\n      return deepMerge(style, {\n        textAlign,\n        textBaseline: 'middle'\n      })\n    },\n    update () {\n      const { mergeConfig, mergeShape, getShape, getStyle, graph, mergedConfig } = this\n\n      graph.animationEnd()\n\n      mergeConfig()\n\n      if (!graph) return\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      mergeShape(graph, shape)\n\n      graph.animationCurve = animationCurve\n      graph.animationFrame = animationFrame\n\n      graph.animation('style', style, true)\n      graph.animation('shape', shape)\n    },\n    mergeShape (graph, shape) {\n      const cacheNum = graph.shape.number.length\n      const shapeNum = shape.number.length\n\n      if (cacheNum !== shapeNum) graph.shape.number = shape.number\n    }\n  },\n  mounted () {\n    const { init } = this\n\n    init()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src"}]}